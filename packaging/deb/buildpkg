#! /bin/bash
set -x
#### Configure variables.  Feel free to change these, but be careful!
SRCDIR=$(pwd)
# You can pass your own temp directory as an environment variable.
if [ -z $TMPDIR ]
then
    TMPDIR="/tmp/buildpkg.deb"
fi
# This prefix is prepended to all directories during "make install" 
FAKEROOT="${TMPDIR}/froot"
# Configure and Compilation directory.
BUILDDIR="${TMPDIR}/build"
# Config variables to mirror those in RPM .spec file
amanda_user=amandabackup
amanda_group=admin
udpportrange="700,740"
tcpportrange="11000,11040"
low_tcpportrange="700,710"
PREFIX="/usr"
EPREFIX="${PREFIX}"
BINDIR="${EPREFIX}/bin"
SBINDIR="${EPREFIX}/sbin"
LIBEXECDIR="${EPREFIX}/lib/amanda"
DATADIR="${PREFIX}/share"
SYSCONFDIR="/etc"
LOCALSTATEDIR="/var"
AMANDAHOMEDIR="${LOCALSTATEDIR}/lib/amanda"
LIBDIR="${EPREFIX}/lib"
INCLUDEDIR="${PREFIX}/include"
INFODIR="${PREFIX}/info"
MANDIR="${DATADIR}/man"
LOGDIR="${LOCALSTATEDIR}/log/amanda"                  

#### CHECKS

if [ ! -f common-src/amanda.h ]
then
    echo "'buildpkg' must be run from the root of an otherwise unused amanda source directory." >&2
    exit 1
fi

if [ ! -f configure ]
then
    echo "The source directory has not been autogen'd -- please download a source distribution tarball or run ./autogen."
    echo "You will need autoconf, automake, and libtool to run autogen (but not to compile from a distribution tarball)."
    exit 1
fi

# TODO:  Can we delete this block?
if [ -z $AMVER ]
then
    AMVER=amanda-2.6.2alpha
fi

#### Build functions

do_distro() {
    # We need to edit packaging/deb/changelog to reflect our current distro
    # and release.  This can't be done withing the debian packaging system;
    # dpkg assumes that packages will have the same name on all releases and
    # that apt will prevent users from downloading the wrong build.  We want
    # this information helpfully obvious since we can't rely on apt.
    if [ -x /usr/bin/lsb_release ] ; then
	# Just to be safe...
        DISTRO=`/usr/lsb_release -i| cut -f2`
    else
	DISTRO=Debian
    fi
    if [ ${DISTRO} = "Debian" ] ; then
	DEB_REL=`cat /etc/debian_version | cut -d"." -f"1,2"`
    elif [ ${DISTRO} = "Ubuntu" ] ; then
	DEB_REL=`/usr/lsb_release -i| cut -f2`
    else
	# Blank is better than some random version
	DEB_REL=""
    fi
    CHANGELOG_VER=`sed -r  "s/(.*\()(.*)(\).*)/\2/;q" packaging/deb/changelog`
    # Now Sub those values into the Debian changelog.
    sed -i".orig" -e "1s/\(${CHANGELOG_VER}.{2}\)/\1${DISTRO}${DEB_REL}/" packaging/deb/changelog
    BUILDDIR=amanda-${CHANGELOG_VER}${DISTRO}${DEB_REL}
}

do_resources() {
    # Setup directories and files as dpkg-buildpkg expects.
    if [ -d debian ]; then
        rm -rf debian
    fi
    cp -Rf packaging/deb debian
    if [ -d $BUILDDIR ]; then
        rm -rf $BUILDDIR
    fi
    mkdir $BUILDDIR
    cp -Rfp * $BUILDDIR
}

do_package() {

    echo "Building package"
    cd $BUILDDIR
    # Create unsigned packages
    dpkg-buildpackage -rfakeroot -uc -us
}

do_distro
do_resources
do_package
